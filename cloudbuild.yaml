options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/looker-portal-backend:$COMMIT_SHA', './backend']

  # Push the backend container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/looker-portal-backend:$COMMIT_SHA']

  # Deploy backend container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'looker-portal-backend'
      - '--image=gcr.io/$PROJECT_ID/looker-portal-backend:$COMMIT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--min-instances=0'
      - '--max-instances=5'
      - '--set-env-vars=FRONTEND_URL=https://looker-portal-frontend-$PROJECT_NUMBER.us-central1.run.app,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,FIRESTORE_DATABASE_ID=afrr-portal,PROJECT_ID=$PROJECT_ID,JWT_SECRET=${_JWT_SECRET},USE_MOCK_LOOKER=${_USE_MOCK_LOOKER}'
      
  # Build the frontend container image with build args
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'gcr.io/$PROJECT_ID/looker-portal-frontend:$COMMIT_SHA', 
      '--build-arg', 'VITE_API_URL=https://looker-portal-backend-$PROJECT_NUMBER.us-central1.run.app',
      '--build-arg', 'VITE_LOOKER_HOST=${_LOOKER_HOST}',
      '--build-arg', 'VITE_USE_MOCK_LOOKER=${_USE_MOCK_LOOKER}',
      './frontend'
    ]
    
  # Push the frontend container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/looker-portal-frontend:$COMMIT_SHA']
    
  # Get the frontend service URL for CORS configuration
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'get-frontend-url'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        # If frontend service already exists, get its URL
        if gcloud run services describe looker-portal-frontend --region=us-central1 &>/dev/null; then
          FRONTEND_URL=$(gcloud run services describe looker-portal-frontend --region=us-central1 --format='value(status.url)')
          echo "Frontend URL: $FRONTEND_URL"
          echo "$FRONTEND_URL" > /workspace/frontend_url.txt
        else
          # If not, use a default domain pattern with PROJECT_NUMBER
          echo "https://looker-portal-frontend-$PROJECT_NUMBER.us-central1.run.app" > /workspace/frontend_url.txt
        fi
    
  # Deploy frontend container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'looker-portal-frontend'
      - '--image=gcr.io/$PROJECT_ID/looker-portal-frontend:$COMMIT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--min-instances=0'
      - '--max-instances=5'
      - '--set-env-vars'
      - 'VITE_API_URL=https://looker-portal-backend-$PROJECT_NUMBER.us-central1.run.app,VITE_LOOKER_HOST=${_LOOKER_HOST},VITE_USE_MOCK_LOOKER=${_USE_MOCK_LOOKER}'
      
# Store the built images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/looker-portal-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/looker-portal-frontend:$COMMIT_SHA'

# Substitution variables to be defined in the build trigger
substitutions:
  _LOOKER_HOST: 'your-looker-instance.cloud.looker.com'
  _BACKEND_URL: https://looker-portal-backend-$PROJECT_NUMBER.us-central1.run.app
  _LOOKER_EMBED_SECRET: 'SECRET_TO_BE_DEFINED'
  _JWT_SECRET: 'SECRET_TO_BE_DEFINED'
  _USE_MOCK_LOOKER: 'true'  # Toggle between 'true' and 'false'