options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-backend:$COMMIT_SHA', './backend']

  # Push the backend container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-backend:$COMMIT_SHA']
    id: 'push-backend'

  # # Export the SBOM of the backend container image
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: gcloud
  #   args: ['artifacts', 'sbom', 'export', '--uri', 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-backend:$COMMIT_SHA']
  #   id: 'sbom-backend'
  #   waitFor: ['push-backend']

  # Deploy backend container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_APP_NAME_LOWER}-backend'
      - '--image=gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-backend:$COMMIT_SHA'
      - '--region=${_DEPLOY_REGION}'
      - '--platform=managed'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--min-instances=0'
      - '--max-instances=5'
      - '--set-env-vars=FRONTEND_URL=https://${_APP_NAME_LOWER}-frontend-$PROJECT_NUMBER.${_DEPLOY_REGION}.run.app,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,FIRESTORE_DATABASE_ID=${_APP_NAME_LOWER},PROJECT_ID=$PROJECT_ID,JWT_SECRET=${_JWT_SECRET},USE_MOCK_LOOKER=${_USE_MOCK_LOOKER},REFRESH_TOKEN_SECRET=${_REFRESH_TOKEN_SECRET},LOOKER_HOST=${_LOOKER_HOST},LOOKER_EMBED_SECRET=${_LOOKER_EMBED_SECRET}'
      
  # Build the frontend container image with build args
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-frontend:$COMMIT_SHA', 
      '--build-arg', 'VITE_API_URL=https://${_APP_NAME_LOWER}-backend-$PROJECT_NUMBER.${_DEPLOY_REGION}.run.app',
      '--build-arg', 'VITE_LOOKER_HOST=${_LOOKER_HOST}',
      '--build-arg', 'VITE_USE_MOCK_LOOKER=${_USE_MOCK_LOOKER}',
      '--build-arg', 'VITE_APP_NAME=${_APP_NAME}',
      '--build-arg', 'VITE_APP_NAME_LOWER=${_APP_NAME_LOWER}',
      '--build-arg', 'VITE_DEPLOY_REGION=${_DEPLOY_REGION}',
      './frontend'
    ]
    
  # Push the frontend container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-frontend:$COMMIT_SHA']
    id: 'push-frontend'
    
  # # Wait for the frontend image to finish scanning
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: gcloud
  #   args:
  #   - 'artifacts'
  #   - 'docker'
  #   - 'images'
  #   - 'scan'
  #   - 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-frontend:$COMMIT_SHA'
  #   id: 'wait-scan-frontend'
  #   waitFor: ['push-frontend']

  # Export the SBOM of the frontend container image
  # - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  #   entrypoint: gcloud
  #   args: ['artifacts', 'sbom', 'export', '--uri', 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-frontend:$COMMIT_SHA']
  #   id: 'sbom-frontend'
  #   waitFor: ['wait-scan-frontend']

  # Deploy frontend container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_APP_NAME_LOWER}-frontend'
      - '--image=gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-frontend:$COMMIT_SHA'
      - '--region=${_DEPLOY_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--cpu=1'
      - '--memory=512Mi'
      - '--min-instances=0'
      - '--max-instances=5'
      - '--set-env-vars'
      - 'VITE_API_URL=https://${_APP_NAME_LOWER}-backend-$PROJECT_NUMBER.${_DEPLOY_REGION}.run.app,VITE_LOOKER_HOST=${_LOOKER_HOST},VITE_USE_MOCK_LOOKER=${_USE_MOCK_LOOKER},VITE_APP_NAME=${_APP_NAME},VITE_APP_NAME_LOWER=${_APP_NAME_LOWER},VITE_DEPLOY_REGION=${_DEPLOY_REGION}'
      
# Store the built images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/${_APP_NAME_LOWER}-frontend:$COMMIT_SHA'

# Substitution variables to be defined in the build trigger
substitutions:
  _LOOKER_HOST: 'your-looker-instance.cloud.looker.com'
  _LOOKER_EMBED_SECRET: 'SECRET_TO_BE_DEFINED'
  _JWT_SECRET: 'SECRET_TO_BE_DEFINED'
  _REFRESH_TOKEN_SECRET: 'SECRET_TO_BE_DEFINED'
  _USE_MOCK_LOOKER: 'true'  # Toggle between 'true' and 'false'
  _APP_NAME: 'Looker Portal'
  _APP_NAME_LOWER: 'looker-portal'
  _DEPLOY_REGION: 'us-central1'
  _BACKEND_URL: https://${_APP_NAME_LOWER}-backend-$PROJECT_NUMBER.${_DEPLOY_REGION}.run.app
